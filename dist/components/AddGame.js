"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports["default"]=void 0;var _react=_interopRequireDefault(require("react"));var _HouseAssignments=_interopRequireDefault(require("./AddGameComponents/HouseAssignments"));var _RoundNav=_interopRequireDefault(require("./AddGameComponents/RoundNav"));var _GameInfo=_interopRequireDefault(require("./AddGameComponents/GameInfo"));var _RoundInfo=_interopRequireDefault(require("./AddGameComponents/RoundInfo"));var _GameProperties=require("./dataObjects/GameProperties");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{"default":obj};}function _typeof(obj){"@babel/helpers - typeof";if(typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"){_typeof=function _typeof(obj){return typeof obj;};}else{_typeof=function _typeof(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};}return _typeof(obj);}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)==="object"||typeof call==="function")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}var AddGame=/*#__PURE__*/function(_React$Component){_inherits(AddGame,_React$Component);var _super=_createSuper(AddGame);function AddGame(props){var _this;_classCallCheck(this,AddGame);_this=_super.call(this,props);_this.state={players:[],// PAGE STATE
currentRound:0,// SAVED DATA
gameId:0,gameNotes:"",finalRound:10,winner:-1,name:"",month:-1,day:-1,year:-1,lannisterId:-1,greyjoyId:-1,starkId:-1,arrynId:-1,baratheonId:-1,targaryenId:-2,dornId:-1,tyrellId:-1,game:{}};// Create the data
_GameProperties.rounds.forEach(function(round){_GameProperties.houses.forEach(function(house){_GameProperties.gameFields.forEach(function(field){_this.state.game["round"+round+"_"+house+"_"+field]=0;});_this.state.game["round"+round+"_"+house+"_playerNotes"]="";});});// DEFAULT STARTING VALUES FOR PLAYERS AND VASSALS
_this.playerStartingValues={lannister:{throne:2,sword:6,raven:1,money:7,supply:2,boats_start:1,footmen_start:2,knights_start:1,siege_start:0,boats_end:1,footmen_end:2,knights_end:1,siege_end:0,strongholds_start:1,strongholds_end:1,castles_start:0,castles_end:0,landTerritories:2,seaTerritories:1,forcedMuster:0,playerNotes:""},greyjoy:{throne:5,sword:1,raven:6,money:7,supply:2,boats_start:2,footmen_start:2,knights_start:1,siege_start:0,boats_end:2,footmen_end:2,knights_end:1,siege_end:0,strongholds_start:1,strongholds_end:1,castles_start:0,castles_end:0,landTerritories:2,seaTerritories:1,forcedMuster:0,playerNotes:""},stark:{throne:3,sword:4,raven:2,money:7,supply:1,boats_start:1,footmen_start:2,knights_start:1,siege_start:0,boats_end:1,footmen_end:2,knights_end:1,siege_end:0,strongholds_start:1,strongholds_end:1,castles_start:1,castles_end:1,landTerritories:2,seaTerritories:1,forcedMuster:0,playerNotes:""},arryn:{throne:7,sword:7,raven:7,money:7,supply:1,boats_start:1,footmen_start:0,knights_start:3,siege_start:0,boats_end:1,footmen_end:0,knights_end:3,siege_end:0,strongholds_start:1,strongholds_end:1,castles_start:1,castles_end:1,landTerritories:2,seaTerritories:0,forcedMuster:0,playerNotes:""},baratheon:{throne:1,sword:5,raven:4,money:7,supply:2,boats_start:2,footmen_start:2,knights_start:1,siege_start:0,boats_end:2,footmen_end:2,knights_end:1,siege_end:0,strongholds_start:1,strongholds_end:1,castles_start:0,castles_end:0,landTerritories:2,seaTerritories:1,forcedMuster:0,playerNotes:""},targaryen:{throne:7,sword:7,raven:7,money:7,supply:4,boats_start:3,footmen_start:1,knights_start:2,siege_start:0,boats_end:3,footmen_end:1,knights_end:2,dragons_start:3,dragons_end:3,siege_end:0,strongholds_start:1,strongholds_end:1,castles_start:0,castles_end:0,landTerritories:4,seaTerritories:1,forcedMuster:0,playerNotes:""},dorn:{throne:4,sword:3,raven:3,money:7,supply:2,boats_start:1,footmen_start:2,knights_start:1,siege_start:0,boats_end:1,footmen_end:2,knights_end:1,siege_end:0,strongholds_start:1,strongholds_end:1,castles_start:0,castles_end:0,landTerritories:2,seaTerritories:1,forcedMuster:0,playerNotes:""},tyrell:{throne:6,sword:2,raven:5,money:7,supply:2,boats_start:1,footmen_start:2,knights_start:1,siege_start:0,boats_end:1,footmen_end:2,knights_end:1,siege_end:0,strongholds_start:1,strongholds_end:1,castles_start:0,castles_end:0,landTerritories:2,seaTerritories:1,forcedMuster:0,playerNotes:""}};_this.vassalStartingValues={lannister:{throne:7,sword:7,raven:7,money:0,supply:4,boats_start:3,footmen_start:3,knights_start:2,siege_start:0,boats_end:3,footmen_end:3,knights_end:2,siege_end:0,strongholds_start:2,strongholds_end:2,castles_start:0,castles_end:0,landTerritories:3,seaTerritories:1,forcedMuster:0,playerNotes:"'Clegane at your back...'"},greyjoy:{throne:7,sword:7,raven:7,money:0,supply:4,boats_start:4,footmen_start:2,knights_start:1,siege_start:0,boats_end:4,footmen_end:2,knights_end:1,siege_end:0,strongholds_start:1,strongholds_end:1,castles_start:0,castles_end:0,landTerritories:2,seaTerritories:2,forcedMuster:0,playerNotes:"'My fleet is invincible!'"},stark:{throne:7,sword:7,raven:7,money:0,supply:4,boats_start:1,footmen_start:4,knights_start:2,siege_start:0,boats_end:1,footmen_end:4,knights_end:2,siege_end:0,strongholds_start:1,strongholds_end:1,castles_start:2,castles_end:2,landTerritories:5,seaTerritories:1,forcedMuster:0,playerNotes:"'I have been forged by winter.'"},arryn:{throne:7,sword:7,raven:7,money:0,supply:4,boats_start:3,footmen_start:2,knights_start:2,siege_start:0,boats_end:3,footmen_end:2,knights_end:2,siege_end:0,strongholds_start:1,strongholds_end:1,castles_start:1,castles_end:1,landTerritories:3,seaTerritories:2,forcedMuster:0,playerNotes:"'My lands are impenetrable.'"},baratheon:{throne:7,sword:7,raven:7,money:0,supply:4,boats_start:3,footmen_start:2,knights_start:2,siege_start:0,boats_end:3,footmen_end:2,knights_end:2,siege_end:0,strongholds_start:1,strongholds_end:1,castles_start:1,castles_end:1,landTerritories:3,seaTerritories:2,forcedMuster:0,playerNotes:"'I love whores and boars.'"},targaryen:{throne:7,sword:7,raven:7,money:0,supply:4,boats_start:3,footmen_start:2,knights_start:2,siege_start:0,boats_end:3,footmen_end:2,knights_end:2,siege_end:0,strongholds_start:1,strongholds_end:1,castles_start:1,castles_end:1,landTerritories:3,seaTerritories:2,forcedMuster:0,playerNotes:"Targaryen can't be a vassal."},dorn:{throne:7,sword:7,raven:7,money:0,supply:4,boats_start:3,footmen_start:4,knights_start:1,siege_start:0,boats_end:3,footmen_end:4,knights_end:1,siege_end:0,strongholds_start:1,strongholds_end:1,castles_start:2,castles_end:2,landTerritories:4,seaTerritories:2,forcedMuster:0,playerNotes:"'House Sunspear shall take justice.'"},tyrell:{throne:7,sword:7,raven:7,money:0,supply:4,boats_start:3,footmen_start:2,knights_start:2,siege_start:0,boats_end:3,footmen_end:2,knights_end:2,siege_end:0,strongholds_start:2,strongholds_end:2,castles_start:0,castles_end:0,landTerritories:4,seaTerritories:1,forcedMuster:0,playerNotes:"'Roselove sends his regards.'"}};// FUNCTION BINDINGS
_this.onClick_IncrementRound=_this.onClick_IncrementRound.bind(_assertThisInitialized(_this));_this.onClick_DecrementRound=_this.onClick_DecrementRound.bind(_assertThisInitialized(_this));_this.fetchPlayers=_this.fetchPlayers.bind(_assertThisInitialized(_this));_this.fetchGameCount=_this.fetchGameCount.bind(_assertThisInitialized(_this));_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));_this.loadFromPrevious=_this.loadFromPrevious.bind(_assertThisInitialized(_this));_this.updateRound1Data=_this.updateRound1Data.bind(_assertThisInitialized(_this));_this.checkState=_this.checkState.bind(_assertThisInitialized(_this));//this.submitGameToDatabase = this.submitGameToDatabase.bind(this);
return _this;}_createClass(AddGame,[{key:"fetchPlayers",value:function fetchPlayers(){var _this2=this;fetch("/getPlayers").then(function(response){console.log("App fetching: "+JSON.stringify(response));return response.json();}).then(function(data){return _this2.setState({players:data});});}},{key:"fetchGameCount",value:function fetchGameCount(){var _this3=this;fetch("/getGamesCount").then(function(response){console.log("App fetching: "+JSON.stringify(response));return response.json();}).then(function(data){return _this3.setState({gameId:data[0].count});});}},{key:"onClick_IncrementRound",value:function onClick_IncrementRound(){if(this.state.currentRound<10){this.setState(function(state){// Important: read `state` instead of `this.state` when updating.
return{currentRound:state.currentRound+1};});}else if(this.state.currentRound===10){this.setState(function(state){// Important: read `state` instead of `this.state` when updating.
return{currentRound:0};});}var elts=document.getElementsByClassName("fieldSelect");for(var i=0;i<elts.length;i++){elts[i].setAttribute("style","background-color: lightlightgray; width:4em; float:right; display:inline; margin:0px; padding:0px;border:0px;");}}},{key:"onClick_DecrementRound",value:function onClick_DecrementRound(){if(this.state.currentRound>0){this.setState(function(state){// Important: read `state` instead of `this.state` when updating.
return{currentRound:state.currentRound-1};});}else if(this.state.currentRound===0){this.setState(function(state){// Important: read `state` instead of `this.state` when updating.
return{currentRound:10};});}// Get the elements by class name
var elts=document.getElementsByClassName("fieldSelect");for(var i=0;i<elts.length;i++){elts[i].setAttribute("style","background-color: lightlightgray; width:4em; float:right; display:inline; margin:0px; padding:0px;border:0px;");}}},{key:"handleChange",value:function handleChange(){var _this4=this;console.log("an element was changed! saving data!");if(this.state.currentRound===0){this.setState({finalRound:document.getElementById("gameInfo_finalRound").value,winner:document.getElementById("gameInfo_winner").value,gameNotes:document.getElementById("gameInfo_gameNotes").value,name:document.getElementById("gameInfo_name").value,month:document.getElementById("gameInfo_month").value,day:document.getElementById("gameInfo_day").value,year:document.getElementById("gameInfo_year").value,lannisterId:document.getElementById("houseAssignment_lannisterPlayer").value,greyjoyId:document.getElementById("houseAssignment_greyjoyPlayer").value,starkId:document.getElementById("houseAssignment_starkPlayer").value,arrynId:document.getElementById("houseAssignment_arrynPlayer").value,baratheonId:document.getElementById("houseAssignment_baratheonPlayer").value,targaryenId:document.getElementById("houseAssignment_targaryenPlayer").value,dornId:document.getElementById("houseAssignment_dornPlayer").value,tyrellId:document.getElementById("houseAssignment_tyrellPlayer").value});}else{this.setState(function(prevState){var newState=_objectSpread({},prevState.game);_GameProperties.houses.forEach(function(house){_GameProperties.gameFields.forEach(function(field){var roundNum="round"+_this4.state.currentRound;var elementId=roundNum+"_"+field+"_"+house;var stateId="round"+_this4.state.currentRound+"_"+house+"_"+field;//console.log("elementID = " + elementId);
newState[stateId]=document.getElementById(elementId).value;});});// Important: read `state` instead of `this.state` when updating.
return{game:newState};});}}},{key:"loadFromPrevious",value:function loadFromPrevious(){var _this5=this;this.setState(function(prevState){// newState = { ...prevState };
var newState=_objectSpread({},prevState.game);console.log("prevstate.game"+JSON.stringify(_objectSpread({},prevState.game)));_GameProperties.houses.forEach(function(houseName){_GameProperties.gameFields.forEach(function(fieldName){var prevStateId="round"+(_this5.state.currentRound-1)+"_"+houseName+"_"+fieldName;var curStateId="round"+_this5.state.currentRound+"_"+houseName+"_"+fieldName;newState[curStateId]=prevState.game[prevStateId];});// Set the starting values of the current round to the ending values of the
newState["round"+_this5.state.currentRound+"_"+houseName+"_boats_start"]=prevState.game["round"+(_this5.state.currentRound-1)+"_"+houseName+"_boats_end"];newState["round"+_this5.state.currentRound+"_"+houseName+"_boats_end"]=prevState.game["round"+(_this5.state.currentRound-1)+"_"+houseName+"_boats_end"];newState["round"+_this5.state.currentRound+"_"+houseName+"_footmen_end"]=prevState.game["round"+(_this5.state.currentRound-1)+"_"+houseName+"_footmen_end"];newState["round"+_this5.state.currentRound+"_"+houseName+"_footmen_start"]=prevState.game["round"+(_this5.state.currentRound-1)+"_"+houseName+"_footmen_end"];newState["round"+_this5.state.currentRound+"_"+houseName+"_knights_end"]=prevState.game["round"+(_this5.state.currentRound-1)+"_"+houseName+"_knights_end"];newState["round"+_this5.state.currentRound+"_"+houseName+"_knights_start"]=prevState.game["round"+(_this5.state.currentRound-1)+"_"+houseName+"_knights_end"];newState["round"+_this5.state.currentRound+"_"+houseName+"_siege_end"]=prevState.game["round"+(_this5.state.currentRound-1)+"_"+houseName+"_siege_end"];newState["round"+_this5.state.currentRound+"_"+houseName+"_siege_start"]=prevState.game["round"+(_this5.state.currentRound-1)+"_"+houseName+"_siege_end"];newState["round"+_this5.state.currentRound+"_"+houseName+"_strongholds_end"]=prevState.game["round"+(_this5.state.currentRound-1)+"_"+houseName+"_strongholds_end"];newState["round"+_this5.state.currentRound+"_"+houseName+"_strongholds_start"]=prevState.game["round"+(_this5.state.currentRound-1)+"_"+houseName+"_strongholds_end"];newState["round"+_this5.state.currentRound+"_"+houseName+"_castles_end"]=prevState.game["round"+(_this5.state.currentRound-1)+"_"+houseName+"_castles_end"];newState["round"+_this5.state.currentRound+"_"+houseName+"_castles_start"]=prevState.game["round"+(_this5.state.currentRound-1)+"_"+houseName+"_castles_end"];});return{game:newState};});}},{key:"updateRound1Data",value:function updateRound1Data(event){var _this6=this;console.log("a vassal has been detected");_GameProperties.houses.forEach(function(house){var elId="houseAssignment_"+house+"Player";if(event.target.id===elId){console.log("id matches: "+elId);// IF HOUSE IS A VASSAL
if(event.target.value==-1){console.log("Updating "+house+" units to vassal start");_this6.setState(function(prevState){var newState=_objectSpread({},prevState.game);_GameProperties.houses.forEach(function(houseName){_GameProperties.gameFields.forEach(function(fieldName){newState["round1_"+houseName+"_"+fieldName]=_this6.vassalStartingValues[houseName][fieldName];});});return{game:newState};});// IF HOUSE IS NOT PLAYING
}else if(event.target.value==-2){// IF HOUSE IS A PLAYER
}else{console.log("Updating "+house+" units to player start");_this6.setState(function(prevState){var newState=_objectSpread({},prevState.game);_GameProperties.houses.forEach(function(houseName){_GameProperties.gameFields.forEach(function(fieldName){newState["round1_"+houseName+"_"+fieldName]=_this6.playerStartingValues[houseName][fieldName];});});return{game:newState};});}}});}// submitGameToDatabase() {
//   var xhr = new XMLHttpRequest();
//   xhr.open("POST", "/addGameToDatabase", true);
//   xhr.setRequestHeader("Content-Type", "application/json; charset=UTF-8");
//   xhr.send(JSON.stringify(this.state));
// }
},{key:"checkState",value:function checkState(){console.log(JSON.stringify(this.state.game));}},{key:"checkGameObjectProperties",value:function checkGameObjectProperties(){console.log(JSON.stringify(_GameProperties.gameObject));}},{key:"componentDidMount",value:function componentDidMount(){this.fetchPlayers();this.fetchGameCount();}},{key:"componentWillUnmount",value:function componentWillUnmount(){}},{key:"returnDisplay",value:function returnDisplay(){if(this.state.currentRound===0){return/*#__PURE__*/_react["default"].createElement(_react["default"].Fragment,null,/*#__PURE__*/_react["default"].createElement(_GameInfo["default"],{gameId:this.state.gameId,saved:{name:this.state.name,gameNotes:this.state.gameNotes,month:this.state.month,day:this.state.day,year:this.state.year}}),/*#__PURE__*/_react["default"].createElement("br",null),/*#__PURE__*/_react["default"].createElement("button",{onClick:this.checkState},"Check State"),/*#__PURE__*/_react["default"].createElement("button",{onClick:this.checkGameObjectProperties},"Check GameObject"),/*#__PURE__*/_react["default"].createElement(_HouseAssignments["default"],{players:this.state.players,updateRound1Data:this.updateRound1Data,saved:{lannister:this.state.lannisterId,greyjoy:this.state.greyjoyId,stark:this.state.starkId,arryn:this.state.arrynId,baratheon:this.state.baratheonId,targaryen:this.state.targaryenId,dorn:this.state.dornId,tyrell:this.state.tyrellId,winner:this.state.winner},finalRound:this.state.finalRound}));}else if(this.state.currentRound>0&&this.state.currentRound<10){return/*#__PURE__*/_react["default"].createElement(_react["default"].Fragment,null,/*#__PURE__*/_react["default"].createElement(_RoundInfo["default"],{round:this.state.currentRound//saved={this.state["round" + this.state.currentRound]}
,saved:this.state.game,loadFromPrevious:this.loadFromPrevious,houseAssignments:{lannister:this.state.lannisterId,greyjoy:this.state.greyjoyId,stark:this.state.starkId,arryn:this.state.arrynId,baratheon:this.state.baratheonId,targaryen:this.state.targaryenId,dorn:this.state.dornId,tyrell:this.state.tyrellId},players:this.state.players}));}else if(this.state.currentRound===10){return/*#__PURE__*/_react["default"].createElement(_react["default"].Fragment,null,/*#__PURE__*/_react["default"].createElement(_RoundInfo["default"],{round:this.state.currentRound//saved={this.state["round" + this.state.currentRound]}
,saved:this.state.game,loadFromPrevious:this.loadFromPrevious,houseAssignments:{lannister:this.state.lannisterId,greyjoy:this.state.greyjoyId,stark:this.state.starkId,arryn:this.state.arrynId,baratheon:this.state.baratheonId,targaryen:this.state.targaryenId,dorn:this.state.dornId,tyrell:this.state.tyrellId},players:this.state.players}),"---------------------------------------",/*#__PURE__*/_react["default"].createElement("div",{style:{width:"13em"}},/*#__PURE__*/_react["default"].createElement("form",{method:"POST",action:"/addGameToDatabase",style:{textAlign:"center"}},/*#__PURE__*/_react["default"].createElement("input",{type:"hidden",name:"gameInfo",value:JSON.stringify({// SAVED DATA
gameId:this.state.gameId,gameNotes:this.state.gameNotes,finalRound:this.state.finalRound,winner:this.state.winner,name:this.state.name,month:this.state.month,day:this.state.day,year:this.state.year,lannisterId:this.state.lannisterId,greyjoyId:this.state.greyjoyId,starkId:this.state.starkId,arrynId:this.state.arrynId,baratheonId:this.state.baratheonId,targaryenId:this.state.targaryenId,dornId:this.state.dornId,tyrellId:this.state.tyrellId})}),/*#__PURE__*/_react["default"].createElement("input",{type:"hidden",name:"gameData",value:JSON.stringify(this.state.game)}),/*#__PURE__*/_react["default"].createElement("input",{type:"submit",value:"Submit Game to Database"}))));}else{return/*#__PURE__*/_react["default"].createElement("div",null,"Invalid Round Number");}}},{key:"render",value:function render(){return/*#__PURE__*/_react["default"].createElement("div",null,/*#__PURE__*/_react["default"].createElement("h2",null,"ADD GAME"),/*#__PURE__*/_react["default"].createElement(_RoundNav["default"],{roundNumber:this.state.currentRound,incrementRound:this.onClick_IncrementRound,decrementRound:this.onClick_DecrementRound}),/*#__PURE__*/_react["default"].createElement("br",null),/*#__PURE__*/_react["default"].createElement("br",null),/*#__PURE__*/_react["default"].createElement("div",{onChange:this.handleChange},this.returnDisplay()));}}]);return AddGame;}(_react["default"].Component);exports["default"]=AddGame;